/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package me.almzmlimam.view;

import java.util.List;
import me.almzmlimam.controller.PasienController;
import me.almzmlimam.model.ModelPasien;
import javax.swing.*;
import me.almzmlimam.model.ModelTabelPasien;

/**
 *
 * @author Al Muzammil Imam
 */
public class PasienView extends javax.swing.JFrame {

    private PasienController controller;

    public PasienView(PasienController controller) {
        this.controller = controller;
        initComponents();
        loadPasienTable();
    }

    public void loadPasienTable() {
        List<ModelPasien> listPasien = controller.getAllPasien();
        ModelTabelPasien tableModel = new ModelTabelPasien(listPasien);
        dataTable.setModel(tableModel);
    }

    private PasienView() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING:
     * Do NOT modify this code. The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        namaField = new javax.swing.JTextField();
        usiaField = new javax.swing.JTextField();
        diagnosaField = new javax.swing.JTextField();
        simpanButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jeniskelaminComboBox = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        teleponField = new javax.swing.JTextField();
        alamatField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("NAMA");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("USIA");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("DIAGNOSA");

        namaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaFieldActionPerformed(evt);
            }
        });

        usiaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usiaFieldActionPerformed(evt);
            }
        });

        diagnosaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosaFieldActionPerformed(evt);
            }
        });

        simpanButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        hapusButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        hapusButton.setText("Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(dataTable);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel4.setText("PENDATAAN PASIEN RUMAH SAKIT");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("JENIS KELAMIN");

        jeniskelaminComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jeniskelaminComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki-Laki", "Perempuan" }));
        jeniskelaminComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jeniskelaminComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("DATA PASIEN");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("NO TELEPON");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("ALAMAT");

        teleponField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teleponFieldActionPerformed(evt);
            }
        });

        alamatField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alamatFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(97, 97, 97)
                        .addComponent(namaField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usiaField)
                            .addComponent(jeniskelaminComboBox, 0, 200, Short.MAX_VALUE))))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alamatField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teleponField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diagnosaField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(simpanButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hapusButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(namaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(teleponField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(simpanButton))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(usiaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(alamatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jeniskelaminComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(diagnosaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(hapusButton)))
                .addGap(41, 41, 41)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        JTextField idField = new JTextField(5);
        JTextField namaField = new JTextField(50);
        JTextField usiaField = new JTextField(10);
        JTextField diagnosaField = new JTextField(20);
        JTextField teleponField = new JTextField(20);
        JTextField alamatField = new JTextField(50);

        // Menambahkan ComboBox untuk memilih jenis kelamin
        JComboBox<String> jenisKelaminComboBox = new JComboBox<>(new String[]{"Laki-laki", "Perempuan"});

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.add(new JLabel("Masukkan ID pasien yang ingin diupdate:"));
        panel.add(idField);
        panel.add(new JLabel("Nama Baru:"));
        panel.add(namaField);
        panel.add(new JLabel("Usia Baru:"));
        panel.add(usiaField);
        panel.add(new JLabel("Diagnosa Baru:"));
        panel.add(diagnosaField);
        panel.add(new JLabel("Jenis Kelamin Baru:"));
        panel.add(jenisKelaminComboBox);
        panel.add(new JLabel("No Telepon Baru:"));
        panel.add(teleponField);
        panel.add(new JLabel("Alamat Baru:"));
        panel.add(alamatField);

        int result = JOptionPane.showConfirmDialog(null, panel,
                "Update Pasien", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            try {
                // Mengambil input dari field
                int id = Integer.parseInt(idField.getText());
                String nama = namaField.getText();
                int usia = Integer.parseInt(usiaField.getText());
                String diagnosa = diagnosaField.getText();
                // Mengambil nilai jenis kelamin yang dipilih
                String jenisKelamin = (String) jenisKelaminComboBox.getSelectedItem();
                // Konversi dari String ke boolean untuk jenis kelamin
                boolean jenisKelaminBoolean = jenisKelamin.equals("Laki-laki");

                // Mengambil telepon dan alamat
                int telepon = Integer.parseInt(teleponField.getText());
                String alamat = alamatField.getText();

                // Validasi jika ada field yang kosong
                if (nama.isEmpty() || diagnosa.isEmpty() || jenisKelamin == null || jenisKelamin.isEmpty() || alamat.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Nama, Diagnosa, Jenis Kelamin, dan Alamat tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Membuat objek pasien baru dengan data yang diupdate
                ModelPasien pasien = new ModelPasien(id, nama, usia, diagnosa, jenisKelaminBoolean, telepon, alamat);

                // Memanggil metode controller untuk update data pasien
                controller.updatePasien(pasien);
                JOptionPane.showMessageDialog(null, "Data berhasil diperbarui", "Sukses", JOptionPane.INFORMATION_MESSAGE);

                // Refresh tabel pasien
                loadPasienTable();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "ID, Usia, dan Nomor Telepon harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        // TODO add your handling code here:
        try {
            // Mengambil input dari field
            String nama = getNamaField().getText();
            int usia = Integer.parseInt(getUsiaField().getText());
            String diagnosa = getDiagnosaField().getText();
            String alamat = getAlamatField().getText(); // Mengambil input dari alamatField
            int telepon = Integer.parseInt(getTeleponField().getText()); // Mengambil input dari teleponField

            // Mendapatkan pilihan jenis kelamin dari ComboBox
            String jenisKelamin = (String) jeniskelaminComboBox.getSelectedItem();
            boolean jenisKelaminBoolean = jenisKelamin.equals("Laki-Laki"); // true untuk Laki-Laki, false untuk Perempuan

            // Validasi input
            if (nama.isEmpty() || diagnosa.isEmpty() || alamat.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nama, Diagnosa, dan Alamat tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Membuat objek pasien baru dengan tambahan nomor telepon dan alamat
            ModelPasien pasien = new ModelPasien(0, nama, usia, diagnosa, jenisKelaminBoolean, telepon, alamat);

            // Debug: Menampilkan data pasien di console
            System.out.println("Nama: " + pasien.getNama());
            System.out.println("Usia: " + pasien.getUsia());
            System.out.println("Diagnosa: " + pasien.getDiagnosa());
            System.out.println("Jenis Kelamin (boolean): " + pasien.isJeniskelamin());
            System.out.println("Nomor Telepon: " + pasien.getTelepon());
            System.out.println("Alamat: " + pasien.getAlamat());

            // Menambahkan data pasien ke database/controller
            controller.addPasien(pasien);

            // Refresh tabel
            loadPasienTable();

            // Mengosongkan input field setelah data berhasil disimpan
            getNamaField().setText("");
            getUsiaField().setText("");
            getDiagnosaField().setText("");
            getTeleponField().setText("");
            getAlamatField().setText("");

            // Menampilkan pesan sukses
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Sukses", JOptionPane.INFORMATION_MESSAGE);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Usia dan Nomor Telepon harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        // TODO add your handling code here:
        JTextField idField = new JTextField(5);
        JPanel panel = new JPanel();
        panel.add(new JLabel("Masukkan ID yang ingin di hapus : "));
        panel.add(idField);

        int result = JOptionPane.showConfirmDialog(null, panel,
                "Hapus Pasien", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            try {
                int id = Integer.parseInt(idField.getText());

                // Menghapus data pasien melalui controller
                controller.deletePasien(id);

                // Menampilkan pesan sukses
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);

                // Refresh tabel pasien setelah data dihapus
                loadPasienTable();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "ID harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void namaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaFieldActionPerformed

    private void diagnosaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diagnosaFieldActionPerformed

    private void usiaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usiaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usiaFieldActionPerformed

    private void jeniskelaminComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jeniskelaminComboBoxActionPerformed
        // TODO add your handling code here:

        // Mendapatkan item yang dipilih dari JComboBox
        String jenisKelamin = (String) jeniskelaminComboBox.getSelectedItem();

        // Menampilkan hasil pilihan ke konsol atau log
        System.out.println("Jenis kelamin yang dipilih: " + jenisKelamin);
    }//GEN-LAST:event_jeniskelaminComboBoxActionPerformed

    private void teleponFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teleponFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teleponFieldActionPerformed

    private void alamatFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alamatFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alamatFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasienView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasienView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasienView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasienView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasienView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamatField;
    private javax.swing.JTable dataTable;
    private javax.swing.JTextField diagnosaField;
    private javax.swing.JButton hapusButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> jeniskelaminComboBox;
    private javax.swing.JTextField namaField;
    private javax.swing.JButton simpanButton;
    private javax.swing.JTextField teleponField;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField usiaField;
    // End of variables declaration//GEN-END:variables

    public PasienController getController() {
        return controller;
    }

    public void setController(PasienController controller) {
        this.controller = controller;
    }

    public JTextField getAlamatField() {
        return alamatField;
    }

    public void setAlamatField(JTextField alamatField) {
        this.alamatField = alamatField;
    }

    public JTable getDataTable() {
        return dataTable;
    }

    public void setDataTable(JTable dataTable) {
        this.dataTable = dataTable;
    }

    public JTextField getDiagnosaField() {
        return diagnosaField;
    }

    public void setDiagnosaField(JTextField diagnosaField) {
        this.diagnosaField = diagnosaField;
    }

    public JButton getHapusButton() {
        return hapusButton;
    }

    public void setHapusButton(JButton hapusButton) {
        this.hapusButton = hapusButton;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JLabel getjLabel3() {
        return jLabel3;
    }

    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    public JLabel getjLabel4() {
        return jLabel4;
    }

    public void setjLabel4(JLabel jLabel4) {
        this.jLabel4 = jLabel4;
    }

    public JLabel getjLabel5() {
        return jLabel5;
    }

    public void setjLabel5(JLabel jLabel5) {
        this.jLabel5 = jLabel5;
    }

    public JLabel getjLabel6() {
        return jLabel6;
    }

    public void setjLabel6(JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    public JLabel getjLabel7() {
        return jLabel7;
    }

    public void setjLabel7(JLabel jLabel7) {
        this.jLabel7 = jLabel7;
    }

    public JLabel getjLabel8() {
        return jLabel8;
    }

    public void setjLabel8(JLabel jLabel8) {
        this.jLabel8 = jLabel8;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    public JSeparator getjSeparator1() {
        return jSeparator1;
    }

    public void setjSeparator1(JSeparator jSeparator1) {
        this.jSeparator1 = jSeparator1;
    }

    public JSeparator getjSeparator2() {
        return jSeparator2;
    }

    public void setjSeparator2(JSeparator jSeparator2) {
        this.jSeparator2 = jSeparator2;
    }

    public JComboBox<String> getJeniskelaminComboBox() {
        return jeniskelaminComboBox;
    }

    public void setJeniskelaminComboBox(JComboBox<String> jeniskelaminComboBox) {
        this.jeniskelaminComboBox = jeniskelaminComboBox;
    }

    public JTextField getNamaField() {
        return namaField;
    }

    public void setNamaField(JTextField namaField) {
        this.namaField = namaField;
    }

    public JButton getSimpanButton() {
        return simpanButton;
    }

    public void setSimpanButton(JButton simpanButton) {
        this.simpanButton = simpanButton;
    }

    public JTextField getTeleponField() {
        return teleponField;
    }

    public void setTeleponField(JTextField teleponField) {
        this.teleponField = teleponField;
    }

    public JButton getUpdateButton() {
        return updateButton;
    }

    public void setUpdateButton(JButton updateButton) {
        this.updateButton = updateButton;
    }

    public JTextField getUsiaField() {
        return usiaField;
    }

    public void setUsiaField(JTextField usiaField) {
        this.usiaField = usiaField;
    }

}
